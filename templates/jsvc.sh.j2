#!/bin/sh
#
# Startup script for Tomcat, the Apache Servlet Engine
#
# chkconfig: 345 80 20
# description: Tomcat is the Apache Servlet Engine
# processname: tomcat
# pidfile: /var/run/tomcat.pid
#
# Mike Millson <*******@meritonlinesystems.com>
#
# version 1.02 - Clear work directory on shutdown per John Turner suggestion.
# version 1.01 - Cross between Red Hat Tomcat RPM and Chris Bush scripts

CATALINA_HOME={{ OPT_PATH }}/{{ SERVER_NAME }}
DAEMON_HOME=$CATALINA_HOME/bin/commons-daemon-1.0.7-native-src/unix/jsvc
TMP_DIR=/var/tmp
CLASSPATH=\
$JAVA_HOME/lib/tools.jar:\
$CATALINA_HOME/bin/commons-daemon.jar:\
$CATALINA_HOME/bin/bootstrap.jar
#JAVA_OPTS='-Xms4096m -Xmx4096m -XX:+UseConcMarkSweepGC'
#JAVA_OPTS='-Xms6144m -Xmx6144m -XX:+ExplicitGCInvokesConcurrent  -XX:MaxPermSize=256m'
#JAVA_OPTS="$JAVA_OPTS -Djava.rmi.server.hostname=119.254.145.142"
#JAVA_OPTS="$JAVA_OPTS -Dcom.sun.management.jmxremote.port=42022"
#JAVA_OPTS="$JAVA_OPTS -Dcom.sun.management.jmxremote.ssl=false"
#JAVA_OPTS="$JAVA_OPTS -Dcom.sun.management.jmxremote.authenticate=false"
JAVA_OPTS='{{ JAVA_OPTS }}'

#JAVA_OPTS='-Xms3072m -Xmx3072m -XX:+UseConcMarkSweepGC -XX:MaxPermSize=128m'
TOMCAT_USER="root"

RETVAL=0
export LANG=en_US.UTF-8
# start and stop functions
start() {
  #  echo -n "Starting tomcat: "
  #  chown -R $TOMCAT_USER:$TOMCAT_USER /home/tomcat/*
    $DAEMON_HOME \
    -user $TOMCAT_USER \
    -home $JAVA_HOME \
    -pidfile $CATALINA_HOME/jsvc.pid \
    -Dcatalina.home=$CATALINA_HOME \
    -Djava.io.tmpdir=$TMP_DIR \
    -Djava.awt.headless=true \
    -outfile $CATALINA_HOME/logs/catalina.out \
    -errfile $CATALINA_HOME/logs/catalina.err \
    $JAVA_OPTS \
    -cp $CLASSPATH \
    org.apache.catalina.startup.Bootstrap
    # To get a verbose JVM
    #-verbose \
    # To get a debug of jsvc.
    #-debug \
    sleep 1 
    PID=`ps aux | grep "jsvc.exec" | grep -v "grep" | awk '{print $2}'`
#    PID=`ps aux | grep tomcat |awk /jsvc/'{print $2}'`
    if [ -n "$PID" ]
    then
        echo -n "Starting tomcat success"
    else
        echo -n "Starting tomcat failed"
        exit 1
    fi
    RETVAL=$?
        echo 
#    [ $RETVAL = 0 ] &&  echo "tomcat is start"
    return $RETVAL
}

stop() {
#    echo `date +"%H:%M:%S"`

#    echo -n "Stopping tomcat: "
#    PID=`cat /usr/local/biservices/jsvc.pid`
#    kill $PID

#    ps aux | grep jsvc | grep -v 'grep' | awk -F ' ' '{print $2}' | xargs kill -s 2
#    ((COUNT++))

    rm -rf $CATALINA_HOME/logs/*
    rm -rf $CATALINA_HOME/work/*

 #  sleep 2
    killall jsvc    
 
    COUNT=0
    PID="jsvc.pid"

   # PID=`ps aux | grep tomcat | awk /jsvc/'{print $2}'`
    while  [ -n "$PID" ]
    do
         if [ $COUNT -ge 30 ]
         then
               echo "Stopping tomcat failed"
               exit 1
         fi
#         echo $COUNT
         ((COUNT++))
         sleep 2 
 
         PID=`ps aux | grep "jsvc.exec" | grep -v "grep" | awk '{print $2}'`        
    done

    echo -n "Stopping tomcat success"
#    echo `date +"%H:%M:%S"`
    RETVAL=$?
        echo 
#    [ $RETVAL = 0 ] &&  echo "tomcat is stop"
    return $RETVAL
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart)
        stop
        # Ugly hack
        # We should really make sure tomcat
        # is stopped before leaving stop
        sleep 5
        start
        ;;
  *)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
esac

exit $RETVAL
